{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.toggleStrictMode = toggleStrictMode;\nexports.applyNodeProps = applyNodeProps;\nexports.updatePicture = updatePicture;\nvar propsToSkip = {\n  children: true,\n  ref: true,\n  key: true,\n  style: true,\n  forwardedRef: true,\n  unstable_applyCache: true,\n  unstable_applyDrawHitFromCache: true\n};\nvar zIndexWarningShowed = false;\nvar dragWarningShowed = false;\nvar EVENTS_NAMESPACE = exports.EVENTS_NAMESPACE = '.react-konva-event';\nvar useStrictMode = false;\n\nfunction toggleStrictMode(value) {\n  useStrictMode = value;\n}\n\nvar DRAGGABLE_WARNING = 'ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.\\nPosition of a node will be changed during drag&drop, so you should update state of the react app as well.\\nConsider to add onDragMove or onDragEnd events.\\nFor more info see: https://github.com/konvajs/react-konva/issues/256\\n';\nvar Z_INDEX_WARNING = 'ReactKonva: You are using \"zIndex\" attribute for a Konva node.\\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\\nFor more info see: https://github.com/konvajs/react-konva/issues/194\\n';\nvar EMPTY_PROPS = {};\n\nfunction applyNodeProps(instance, props) {\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_PROPS;\n\n  if (props === oldProps) {\n    console.error('same props');\n  } // don't use zIndex in react-konva\n\n\n  if (!zIndexWarningShowed && 'zIndex' in props) {\n    console.warn(Z_INDEX_WARNING);\n    zIndexWarningShowed = true;\n  } // check correct draggable usage\n\n\n  if (!dragWarningShowed && props.draggable) {\n    var hasPosition = props.x !== undefined || props.y !== undefined;\n    var hasEvents = props.onDragEnd || props.onDragMove;\n\n    if (hasPosition && !hasEvents) {\n      console.warn(DRAGGABLE_WARNING);\n      dragWarningShowed = true;\n    }\n  } // check old props\n  // we need to unset properties that are not in new props\n  // and remove all events\n\n\n  for (var key in oldProps) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n\n    var isEvent = key.slice(0, 2) === 'on';\n    var propChanged = oldProps[key] !== props[key]; // if that is a changed event, we need to remvoe it\n\n    if (isEvent && propChanged) {\n      var eventName = key.substr(2).toLowerCase();\n\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n\n      instance.off(eventName, oldProps[key]);\n    }\n\n    var toRemove = !props.hasOwnProperty(key);\n\n    if (toRemove) {\n      instance.setAttr(key, undefined);\n    }\n  }\n\n  var strictUpdate = useStrictMode || props._useStrictMode;\n  var updatedProps = {};\n  var hasUpdates = false;\n  var newEvents = {};\n\n  for (var key in props) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n\n    var isEvent = key.slice(0, 2) === 'on';\n    var toAdd = oldProps[key] !== props[key];\n\n    if (isEvent && toAdd) {\n      var eventName = key.substr(2).toLowerCase();\n\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      } // check that event is not undefined\n\n\n      if (props[key]) {\n        newEvents[eventName] = props[key];\n      }\n    }\n\n    if (!isEvent && (props[key] !== oldProps[key] || strictUpdate && props[key] !== instance.getAttr(key))) {\n      hasUpdates = true;\n      updatedProps[key] = props[key];\n    }\n  }\n\n  if (hasUpdates) {\n    instance.setAttrs(updatedProps);\n    updatePicture(instance);\n  } // subscribe to events AFTER we set attrs\n  // we need it to fix https://github.com/konvajs/react-konva/issues/471\n  // settings attrs may add events. Like \"draggable: true\" will add \"mousedown\" listener\n\n\n  for (var eventName in newEvents) {\n    instance.on(eventName + EVENTS_NAMESPACE, newEvents[eventName]);\n  }\n}\n\nfunction updatePicture(node) {\n  var drawingNode = node.getLayer() || node.getStage();\n  drawingNode && drawingNode.batchDraw();\n}","map":{"version":3,"sources":["/Users/talhakhalil/Desktop/CodeDoodle/code_doodle/node_modules/react-konva/lib/makeUpdates.js"],"names":["exports","__esModule","toggleStrictMode","applyNodeProps","updatePicture","propsToSkip","children","ref","key","style","forwardedRef","unstable_applyCache","unstable_applyDrawHitFromCache","zIndexWarningShowed","dragWarningShowed","EVENTS_NAMESPACE","useStrictMode","value","DRAGGABLE_WARNING","Z_INDEX_WARNING","EMPTY_PROPS","instance","props","oldProps","arguments","length","undefined","console","error","warn","draggable","hasPosition","x","y","hasEvents","onDragEnd","onDragMove","isEvent","slice","propChanged","eventName","substr","toLowerCase","toUpperCase","off","toRemove","hasOwnProperty","setAttr","strictUpdate","_useStrictMode","updatedProps","hasUpdates","newEvents","toAdd","getAttr","setAttrs","on","node","drawingNode","getLayer","getStage","batchDraw"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.toggleStrictMode = toggleStrictMode;\nexports.applyNodeProps = applyNodeProps;\nexports.updatePicture = updatePicture;\nvar propsToSkip = {\n  children: true,\n  ref: true,\n  key: true,\n  style: true,\n  forwardedRef: true,\n  unstable_applyCache: true,\n  unstable_applyDrawHitFromCache: true\n};\n\nvar zIndexWarningShowed = false;\nvar dragWarningShowed = false;\n\nvar EVENTS_NAMESPACE = exports.EVENTS_NAMESPACE = '.react-konva-event';\n\nvar useStrictMode = false;\nfunction toggleStrictMode(value) {\n  useStrictMode = value;\n}\n\nvar DRAGGABLE_WARNING = 'ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.\\nPosition of a node will be changed during drag&drop, so you should update state of the react app as well.\\nConsider to add onDragMove or onDragEnd events.\\nFor more info see: https://github.com/konvajs/react-konva/issues/256\\n';\n\nvar Z_INDEX_WARNING = 'ReactKonva: You are using \"zIndex\" attribute for a Konva node.\\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\\nFor more info see: https://github.com/konvajs/react-konva/issues/194\\n';\n\nvar EMPTY_PROPS = {};\n\nfunction applyNodeProps(instance, props) {\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_PROPS;\n\n  if (props === oldProps) {\n    console.error('same props');\n  }\n  // don't use zIndex in react-konva\n  if (!zIndexWarningShowed && 'zIndex' in props) {\n    console.warn(Z_INDEX_WARNING);\n    zIndexWarningShowed = true;\n  }\n\n  // check correct draggable usage\n  if (!dragWarningShowed && props.draggable) {\n    var hasPosition = props.x !== undefined || props.y !== undefined;\n    var hasEvents = props.onDragEnd || props.onDragMove;\n    if (hasPosition && !hasEvents) {\n      console.warn(DRAGGABLE_WARNING);\n      dragWarningShowed = true;\n    }\n  }\n\n  // check old props\n  // we need to unset properties that are not in new props\n  // and remove all events\n  for (var key in oldProps) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var propChanged = oldProps[key] !== props[key];\n\n    // if that is a changed event, we need to remvoe it\n    if (isEvent && propChanged) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      instance.off(eventName, oldProps[key]);\n    }\n    var toRemove = !props.hasOwnProperty(key);\n    if (toRemove) {\n      instance.setAttr(key, undefined);\n    }\n  }\n\n  var strictUpdate = useStrictMode || props._useStrictMode;\n  var updatedProps = {};\n  var hasUpdates = false;\n\n  var newEvents = {};\n\n  for (var key in props) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var toAdd = oldProps[key] !== props[key];\n    if (isEvent && toAdd) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      // check that event is not undefined\n      if (props[key]) {\n        newEvents[eventName] = props[key];\n      }\n    }\n    if (!isEvent && (props[key] !== oldProps[key] || strictUpdate && props[key] !== instance.getAttr(key))) {\n      hasUpdates = true;\n      updatedProps[key] = props[key];\n    }\n  }\n\n  if (hasUpdates) {\n    instance.setAttrs(updatedProps);\n    updatePicture(instance);\n  }\n\n  // subscribe to events AFTER we set attrs\n  // we need it to fix https://github.com/konvajs/react-konva/issues/471\n  // settings attrs may add events. Like \"draggable: true\" will add \"mousedown\" listener\n  for (var eventName in newEvents) {\n    instance.on(eventName + EVENTS_NAMESPACE, newEvents[eventName]);\n  }\n}\n\nfunction updatePicture(node) {\n  var drawingNode = node.getLayer() || node.getStage();\n  drawingNode && drawingNode.batchDraw();\n}"]},"metadata":{},"sourceType":"script"}